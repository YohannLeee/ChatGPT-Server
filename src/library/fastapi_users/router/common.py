from enum import Enum
from typing import Dict, Union

from pydantic import BaseModel


class ErrorModel(BaseModel):
    #detail: Union[str, Dict[str, str]]
    code: int
    message: Union[str, Dict[str, str]]


class ErrorCodeReasonModel(BaseModel):
    code: str
    reason: str


class ErrorCode(tuple[int, str], Enum):
    # REGISTER_INVALID_PASSWORD = "REGISTER_INVALID_PASSWORD"
    # REGISTER_USER_ALREADY_EXISTS = "REGISTER_USER_ALREADY_EXISTS"
    # OAUTH_NOT_AVAILABLE_EMAIL = "OAUTH_NOT_AVAILABLE_EMAIL"
    # OAUTH_USER_ALREADY_EXISTS = "OAUTH_USER_ALREADY_EXISTS"
    # LOGIN_BAD_CREDENTIALS = "LOGIN_BAD_CREDENTIALS"
    # LOGIN_USER_NOT_VERIFIED = "LOGIN_USER_NOT_VERIFIED"
    # RESET_PASSWORD_BAD_TOKEN = "RESET_PASSWORD_BAD_TOKEN"
    # RESET_PASSWORD_INVALID_PASSWORD = "RESET_PASSWORD_INVALID_PASSWORD"
    # VERIFY_USER_BAD_TOKEN = "VERIFY_USER_BAD_TOKEN"
    # VERIFY_USER_ALREADY_VERIFIED = "VERIFY_USER_ALREADY_VERIFIED"
    # UPDATE_USER_EMAIL_ALREADY_EXISTS = "UPDATE_USER_EMAIL_ALREADY_EXISTS"
    # UPDATE_USER_INVALID_PASSWORD = "UPDATE_USER_INVALID_PASSWORD"
    REGISTER_INVALID_PASSWORD = (601, "密码无效")
    REGISTER_USER_ALREADY_EXISTS = (602, "用户已存在")
    OAUTH_NOT_AVAILABLE_EMAIL = (603, "第三方认证邮箱无效")
    OAUTH_USER_ALREADY_EXISTS = (604, "第三方认证用户已存在")
    LOGIN_BAD_CREDENTIALS = (605, "用户名或密码无效")
    LOGIN_USER_NOT_VERIFIED = (606, "未进行邮箱验证")
    RESET_PASSWORD_BAD_TOKEN = (607, "Token无效或已过期")
    RESET_PASSWORD_INVALID_PASSWORD = (608, "密码无效")
    VERIFY_USER_BAD_TOKEN = (609, "Token无效")
    VERIFY_USER_ALREADY_VERIFIED = (610, "用户已验证")
    UPDATE_USER_EMAIL_ALREADY_EXISTS = (611, "邮箱已存在")
    UPDATE_USER_INVALID_PASSWORD = (612, "密码无效")
    CURRENT_USER_NOT_ACTIVE = (613, "帐号已禁用")
    FORGOT_PASSWORD_INVALID_EMAIL = (614, "邮箱不存在")
    USER_NOT_EXIST = (615, "用户不存在")
